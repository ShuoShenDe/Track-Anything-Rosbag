import base64
from altair import JsonDataFormat
import cv2
import numpy as np

def save_data(data, filename):
    np.save(filename, data)

image_json = {"cv_mat": "iVBORw0KGgoAAAANSUhEUgAAB4AAAAQ4CAAAAADNuJ6fAAASXklEQVR4Ae3BCWJsyWEcwMy71rHqsJZNmRLJWf4CZL8GIqIBAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDmGgBgrgEA5hoAYK4BAOYaAGCuAQDm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AABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABzDQAw1wAAcw0AMNcAAHMNADDXAABz/wflCas52TF40wAAAABJRU5ErkJggg=="}

decoded_image_data = base64.b64decode(image_json["cv_mat"])
# transfer decoded_image_data to numpy
image_array = np.frombuffer(decoded_image_data, np.uint8)
cv_mat = cv2.imdecode(image_array, cv2.IMREAD_GRAYSCALE)
print("get cv_mat from client is {}".format(cv_mat.shape))

save_data(cv_mat, "cv_mat.npy")